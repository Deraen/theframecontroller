# Example configuration entry
esphome:
  name: theframecontroller

ota:

api:

esp8266:
  board: nodemcuv2

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

web_server:
  port: 80

logger:
  level: VERBOSE
  baud_rate: 0

uart:
  id: uart_bus
  tx_pin: 1
  rx_pin: 3
  baud_rate: 9600
  debug:
    dummy_receiver: true
    after:
      timeout: 100ms
    sequence:
      - lambda: |-
          UARTDebug::log_string(direction, bytes);

          std::string str(bytes.begin(), bytes.end());

          // Long response - query resp
          if (bytes.size() == 16) {
            // Success
            if (bytes.at(0) == 0x03 && bytes.at(1) == 0x0c && bytes.at(2) == 0xf1) {
              ESP_LOGD("custom", "success response");
              if (bytes.at(3) == 0x03 && bytes.at(4) == 0x0c && bytes.at(5) == 0xf5) {
                ESP_LOGD("custom", "Parsing query response");
                if (bytes.at(8) == 0x00) {
                  ESP_LOGD("custom", "Power status response");
                  if (bytes.at(12) == 0x05) {
                    id(power).publish_state(true);
                  } else {
                    id(power).publish_state(false);
                  }
                } else if (bytes.at(8) == 0x07) {
                  ESP_LOGD("custom", "Picture mode response");
                  if (bytes.at(12) == 0x08) {
                    id(art_mode).publish_state(true);
                  } else {
                    id(art_mode).publish_state(false);
                  }
                }
              }
            }
          }

  #           0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15
  # On:       03:0C:F1:03:0C:F5:08:F0:00:00:00:F1:05:00:00:0E
  # Off:      03:0C:F1:03:0C:F5:08:F0:00:00:00:F1:04:00:00:0F
  # Normal:   03:0C:F1:03:0C:F5:08:F0:07:00:00:FF:00:00:00:FE
  # Art mode: 03:0C:F1:03:0C:F5:08:F0:07:00:00:FF:08:00:00:F6

switch:
  - platform: template
    name: Power
    id: power
    turn_on_action:
      - uart.write: [0x08, 0x22, 0x00, 0x00, 0x00, 0x02, 0xd4]
      - delay: 500ms
      - uart.write: [0x08, 0x22, 0xF0, 0x00, 0x00, 0x00, 0xE6]
      - delay: 200ms
      - uart.write: [0x08, 0x22, 0xF0, 0x07, 0x00, 0x00, 0xDF]
    turn_off_action:
      - uart.write: [0x08, 0x22, 0x00, 0x00, 0x00, 0x01, 0xd5]
      - delay: 500ms
      - uart.write: [0x08, 0x22, 0xF0, 0x00, 0x00, 0x00, 0xE6]
      - delay: 200ms
      - uart.write: [0x08, 0x22, 0xF0, 0x07, 0x00, 0x00, 0xDF]

  - platform: template
    name: Art mode
    id: art_mode
    turn_on_action:
      - uart.write: [0x08, 0x22, 0x0b, 0x0b, 0x0e, 0x01, 0xb1]
      - delay: 500ms
      - uart.write: [0x08, 0x22, 0xF0, 0x00, 0x00, 0x00, 0xE6]
      - delay: 200ms
      - uart.write: [0x08, 0x22, 0xF0, 0x07, 0x00, 0x00, 0xDF]
    turn_off_action:
      - uart.write: [0x08, 0x22, 0x0b, 0x0b, 0x0e, 0x00, 0xb2]
      - delay: 500ms
      - uart.write: [0x08, 0x22, 0xF0, 0x00, 0x00, 0x00, 0xE6]
      - delay: 200ms
      - uart.write: [0x08, 0x22, 0xF0, 0x07, 0x00, 0x00, 0xDF]

# Request power and picture mode every 250ms?

interval:
  - interval: 5s
    then:
      - uart.write: [0x08, 0x22, 0xF0, 0x00, 0x00, 0x00, 0xE6]
      - delay: 200ms
      - uart.write: [0x08, 0x22, 0xF0, 0x07, 0x00, 0x00, 0xDF]
